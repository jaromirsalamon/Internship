import numpy as np
import mnist
import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

train_images = mnist.train_images()
train_labels = mnist.train_labels()
test_images = mnist.test_images()
test_labels = mnist.test_labels()

# Normalize the images
train_images = (train_images / 255) - 0.5
test_images = (test_images / 255) - 0.5

# Flatten the images
train_images = train_images.reshape((-1, 784))
test_images = test_images.reshape((-1, 784))

# Build the model
model = Sequential([
    Dense(64, activation='sigmoid', input_shape=(784,)), #sigmoid can be changed with relu
    Dense(64, activation='sigmoid'),
    Dense(10, activation='softmax'),
])

model.compile(
  optimizer='adam',
  loss='sparse_categorical_crossentropy',
  metrics=['accuracy'],
)

model.fit(
    train_images,
    train_labels,
    epochs=5,
    batch_size=32
)

# Testing the model
model.evaluate(
    test_images,
    test_labels
)

# Predict on the first 5 test images.
predictions = model.predict(test_images[:5])

# Print our model's predictions.
print(np.argmax(predictions, axis=1)) # [7, 2, 1, 0, 4]

# Check our predictions against the ground truths.
print(test_labels[:5]) # [7, 2, 1, 0, 4]

#Python 3.6.2 is needed to run this script. Tensorflow does not work with Python 3.8

